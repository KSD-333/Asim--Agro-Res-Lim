rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Allow public read access to products
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Allow public read access to reviews
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.userId);
    }
    
    // Allow authenticated users to read and write their own cart
    match /carts/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write their own orders
    match /orders/{orderId} {
      allow read: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.userId);
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.userId);
    }

    // Allow public read access to users collection
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && (isAdmin() || request.auth.uid == userId);
      allow create: if request.auth != null && isAdmin();
      allow delete: if request.auth != null && isAdmin();
    }

    // Allow admins to read all collections
    match /{document=**} {
      allow read: if isAdmin();
    }
  }
} 